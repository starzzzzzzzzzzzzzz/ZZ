"""add document tables

Revision ID: 4360bf5a724b
Revises: 14e849836344
Create Date: 2025-02-18 09:11:43.236453

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4360bf5a724b'
down_revision: Union[str, None] = '14e849836344'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('document_chunks', sa.Column('chunk_metadata', sa.JSON(), nullable=True, comment='分块元数据'))
    op.add_column('document_chunks', sa.Column('vector_id', sa.String(length=64), nullable=True, comment='向量ID'))
    op.alter_column('document_chunks', 'document_id',
               existing_type=sa.INTEGER(),
               comment='文档ID',
               existing_nullable=False)
    op.alter_column('document_chunks', 'content',
               existing_type=sa.TEXT(),
               comment='分块内容',
               existing_nullable=False)
    op.alter_column('document_chunks', 'chunk_index',
               existing_type=sa.INTEGER(),
               comment='分块序号',
               existing_nullable=False)
    op.alter_column('document_chunks', 'page_number',
               existing_type=sa.INTEGER(),
               comment='页码',
               existing_nullable=True)
    op.alter_column('document_chunks', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               comment='创建时间')
    op.drop_index('ix_document_chunks_id', table_name='document_chunks')
    op.drop_column('document_chunks', 'chunk_meta')
    op.drop_column('document_chunks', 'vector')
    op.add_column('documents', sa.Column('content', sa.Text(), nullable=True, comment='文档内容'))
    op.alter_column('documents', 'title',
               existing_type=sa.VARCHAR(length=255),
               comment='文档标题',
               existing_nullable=False)
    op.alter_column('documents', 'file_path',
               existing_type=sa.VARCHAR(length=512),
               nullable=True,
               comment='文件路径')
    op.alter_column('documents', 'file_size',
               existing_type=sa.INTEGER(),
               nullable=True,
               comment='文件大小(字节)')
    op.alter_column('documents', 'mime_type',
               existing_type=sa.VARCHAR(length=100),
               nullable=True,
               comment='MIME类型')
    op.alter_column('documents', 'page_count',
               existing_type=sa.INTEGER(),
               comment='页数',
               existing_nullable=True)
    op.alter_column('documents', 'vector_store_path',
               existing_type=sa.VARCHAR(length=512),
               comment='向量存储路径',
               existing_nullable=True)
    op.alter_column('documents', 'chunk_count',
               existing_type=sa.INTEGER(),
               comment='分块数量',
               existing_nullable=True)
    op.alter_column('documents', 'is_vectorized',
               existing_type=sa.BOOLEAN(),
               comment='是否已向量化',
               existing_nullable=True)
    op.alter_column('documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               comment='创建时间')
    op.alter_column('documents', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               comment='更新时间')
    op.drop_index('ix_documents_id', table_name='documents')
    op.drop_column('documents', 'doc_meta')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('documents', sa.Column('doc_meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.create_index('ix_documents_id', 'documents', ['id'], unique=False)
    op.alter_column('documents', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               comment=None,
               existing_comment='更新时间')
    op.alter_column('documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               comment=None,
               existing_comment='创建时间')
    op.alter_column('documents', 'is_vectorized',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='是否已向量化',
               existing_nullable=True)
    op.alter_column('documents', 'chunk_count',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='分块数量',
               existing_nullable=True)
    op.alter_column('documents', 'vector_store_path',
               existing_type=sa.VARCHAR(length=512),
               comment=None,
               existing_comment='向量存储路径',
               existing_nullable=True)
    op.alter_column('documents', 'page_count',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='页数',
               existing_nullable=True)
    op.alter_column('documents', 'mime_type',
               existing_type=sa.VARCHAR(length=100),
               nullable=False,
               comment=None,
               existing_comment='MIME类型')
    op.alter_column('documents', 'file_size',
               existing_type=sa.INTEGER(),
               nullable=False,
               comment=None,
               existing_comment='文件大小(字节)')
    op.alter_column('documents', 'file_path',
               existing_type=sa.VARCHAR(length=512),
               nullable=False,
               comment=None,
               existing_comment='文件路径')
    op.alter_column('documents', 'title',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='文档标题',
               existing_nullable=False)
    op.drop_column('documents', 'content')
    op.add_column('document_chunks', sa.Column('vector', postgresql.ARRAY(sa.DOUBLE_PRECISION(precision=53)), autoincrement=False, nullable=True))
    op.add_column('document_chunks', sa.Column('chunk_meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.create_index('ix_document_chunks_id', 'document_chunks', ['id'], unique=False)
    op.alter_column('document_chunks', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               comment=None,
               existing_comment='创建时间')
    op.alter_column('document_chunks', 'page_number',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='页码',
               existing_nullable=True)
    op.alter_column('document_chunks', 'chunk_index',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='分块序号',
               existing_nullable=False)
    op.alter_column('document_chunks', 'content',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='分块内容',
               existing_nullable=False)
    op.alter_column('document_chunks', 'document_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='文档ID',
               existing_nullable=False)
    op.drop_column('document_chunks', 'vector_id')
    op.drop_column('document_chunks', 'chunk_metadata')
    # ### end Alembic commands ### 